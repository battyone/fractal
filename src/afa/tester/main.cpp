
#include <Windows.h>
#include <tchar.h>
#include <iostream>

#include <vector>



typedef int(__stdcall *Fn_ExpClass_Create)(int, int);
typedef int(__stdcall *Fn_ExpClass_Push)(int, int, double, time_t, time_t);
typedef double(__stdcall *Fn_ExpClass_Calc)(int);
typedef void(__stdcall *Fn_ExpClass_Destroy)(int);
int main()
{
	HMODULE hDll = ::LoadLibrary(_T("afa.dll"));

	Fn_ExpClass_Create ExpClass_Create = (Fn_ExpClass_Create)GetProcAddress(hDll, "Create");
	Fn_ExpClass_Destroy ExpClass_Destroy = (Fn_ExpClass_Destroy)GetProcAddress(hDll, "Destroy");
	Fn_ExpClass_Push ExpClass_Push = (Fn_ExpClass_Push)GetProcAddress(hDll, "Push");
	Fn_ExpClass_Calc ExpClass_Calc = (Fn_ExpClass_Calc)GetProcAddress(hDll, "Calculate");

	int ptr = ExpClass_Create(40,2);
	time_t t0 = 1000;
	time_t t1 = 1000;
	t1 = t0;

	std::vector<std::vector<double>>sample = {
		{ 1.0,  113.183 },
		{ 2.0,  113.169 },
		{ 3.0,  113.171 },
		{ 4.0,  113.189 },
		{ 5.0,  113.163 },
		{ 6.0,  113.19 },
		{ 7.0,  113.184 },
		{ 8.0,  113.209 },
		{ 9.0,  113.193 },
		{ 10.0,  113.175 },
		{ 11.0,  113.153 },
		{ 12.0,  113.145 },
		{ 13.0,  113.159 },
		{ 14.0,  113.16 },
		{ 15.0,  113.134 },
		{ 16.0,  113.131 },
		{ 17.0,  113.154 },
		{ 18.0,  113.187 },
		{ 19.0,  113.181 },
		{ 20.0,  113.191 },
		{ 21.0,  113.182 },
		{ 22.0,  113.183 },
		{ 23.0,  113.205 },
		{ 24.0,  113.199 },
		{ 25.0,  113.212 },
		{ 26.0,  113.222 },
		{ 27.0,  113.224 },
		{ 28.0,  113.216 },
		{ 29.0,  113.235 },
		{ 30.0,  113.258 },
		{ 31.0,  113.266 },
		{ 32.0,  113.258 },
		{ 33.0,  113.25 },
		{ 34.0,  113.282 },
		{ 35.0,  113.298 },
		{ 36.0,  113.342 },
		{ 37.0,  113.339 },
		{ 38.0,  113.335 },
		{ 39.0,  113.353 },
		{ 40.0,  113.354 },
		{ 41.0,  113.323 },
		{ 42.0,  113.335 },
		{ 43.0,  113.314 },
		{ 44.0,  113.311 },
		{ 45.0,  113.309 },
		{ 46.0,  113.317 },
		{ 47.0,  113.318 },
		{ 48.0,  113.3 },
		{ 49.0,  113.3 },
		{ 50.0,  113.298 },
		{ 51.0,  113.287 },
		{ 52.0,  113.267 },
		{ 53.0,  113.233 },
		{ 54.0,  113.213 },
		{ 55.0,  113.192 },
		{ 56.0,  113.147 },
		{ 57.0,  113.158 },
		{ 58.0,  113.15 },
		{ 59.0,  113.144 },
		{ 60.0,  113.132 },
		{ 61.0,  113.131 },
		{ 62.0,  113.143 },
		{ 63.0,  113.159 },
		{ 64.0,  113.176 },
		{ 65.0,  113.15 },
		{ 66.0,  113.12 },
		{ 67.0,  113.105 },
		{ 68.0,  113.119 },
		{ 69.0,  113.13 },
		{ 70.0,  113.136 },
		{ 71.0,  113.147 },
		{ 72.0,  113.162 },
		{ 73.0,  113.129 },
		{ 74.0,  113.076 },
		{ 75.0,  113.039 },
		{ 76.0,  113.017 },
		{ 77.0,  113.032 },
		{ 78.0,  113.082 },
		{ 79.0,  113.044 },
		{ 80.0,  112.991 },
		{ 81.0,  112.966 },
		{ 82.0,  113.045 },
		{ 83.0,  113.042 },
		{ 84.0,  113.042 },
		{ 85.0,  113.093 },
		{ 86.0,  113.05 },
		{ 87.0,  113.026 },
		{ 88.0,  113.144 },
		{ 89.0,  113.119 },
		{ 90.0,  113.031 },
		{ 91.0,  113.096 },
		{ 92.0,  113.108 },
		{ 93.0,  113.079 },
		{ 94.0,  113.052 },
		{ 95.0,  113.023 },
		{ 96.0,  113.035 },
		{ 97.0,  113.004 },
		{ 98.0,  112.935 },
		{ 99.0,  112.914 },
		{ 100.0,  112.861 },
		{ 101.0,  112.775 },
		{ 102.0,  112.812 },
		{ 103.0,  112.818 },
		{ 104.0,  112.893 },
		{ 105.0,  112.866 },
		{ 106.0,  112.886 },
		{ 107.0,  112.858 },
		{ 108.0,  112.949 },
		{ 109.0,  112.93 },
		{ 110.0,  112.943 },
		{ 111.0,  112.972 },
		{ 112.0,  113.028 },
		{ 113.0,  113.043 },
		{ 114.0,  113.041 },
		{ 115.0,  112.97 },
		{ 116.0,  112.997 },
		{ 117.0,  112.984 },
		{ 118.0,  112.984 },
		{ 119.0,  113.008 },
		{ 120.0,  112.997 },
		{ 121.0,  112.967 },
		{ 122.0,  112.965 },
		{ 123.0,  112.948 },
		{ 124.0,  112.89 },
		{ 125.0,  112.932 },
		{ 126.0,  112.934 },
		{ 127.0,  112.945 },
		{ 128.0,  112.94 },
		{ 129.0,  112.896 },
		{ 130.0,  112.896 },
		{ 131.0,  112.896 },
		{ 132.0,  112.922 },
		{ 133.0,  112.983 },
		{ 134.0,  112.971 },
		{ 135.0,  112.957 },
		{ 136.0,  112.961 },
		{ 137.0,  112.968 },
		{ 138.0,  112.985 },
		{ 139.0,  113.001 },
		{ 140.0,  113.068 },
		{ 141.0,  113.047 },
		{ 142.0,  113.041 },
		{ 143.0,  113.067 },
		{ 144.0,  113.095 },
		{ 145.0,  113.19 },
		{ 146.0,  113.189 },
		{ 147.0,  113.166 },
		{ 148.0,  113.171 },
		{ 149.0,  113.141 },
		{ 150.0,  113.137 },
		{ 151.0,  113.194 },
		{ 152.0,  113.239 },
		{ 153.0,  113.231 },
		{ 154.0,  113.239 },
		{ 155.0,  113.239 },
		{ 156.0,  113.232 },
		{ 157.0,  113.206 },
		{ 158.0,  113.182 },
		{ 159.0,  113.185 },
		{ 160.0,  113.17 },
		{ 161.0,  113.164 },
		{ 162.0,  113.169 },
		{ 163.0,  113.176 },
		{ 164.0,  113.198 },
		{ 165.0,  113.223 },
		{ 166.0,  113.232 },
		{ 167.0,  113.212 },
		{ 168.0,  113.236 },
		{ 169.0,  113.198 },
		{ 170.0,  113.199 },
		{ 171.0,  113.203 },
		{ 172.0,  113.254 },
		{ 173.0,  113.267 },
		{ 174.0,  113.334 },
		{ 175.0,  113.325 },
		{ 176.0,  113.376 },
		{ 177.0,  113.399 },
		{ 178.0,  113.392 },
		{ 179.0,  113.388 },
		{ 180.0,  113.379 },
		{ 181.0,  113.4 },
		{ 182.0,  113.388 },
		{ 183.0,  113.428 },
		{ 184.0,  113.442 },
		{ 185.0,  113.422 },
		{ 186.0,  113.435 },
		{ 187.0,  113.426 },
		{ 188.0,  113.42 },
		{ 189.0,  113.426 },
		{ 190.0,  113.4 },
		{ 191.0,  113.422 },
		{ 192.0,  113.423 },
		{ 193.0,  113.4 },
		{ 194.0,  113.383 },
		{ 195.0,  113.396 },
		{ 196.0,  113.381 },
		{ 197.0,  113.381 },
		{ 198.0,  113.375 },
		{ 199.0,  113.421 },
		{ 200.0,  113.401 },
		{ 201.0,  113.384 },
		{ 202.0,  113.419 },
		{ 203.0,  113.422 },
		{ 204.0,  113.428 },
		{ 205.0,  113.415 },
		{ 206.0,  113.399 },
		{ 207.0,  113.398 },
		{ 208.0,  113.408 },
		{ 209.0,  113.42 },
		{ 210.0,  113.426 },
		{ 211.0,  113.428 },
		{ 212.0,  113.434 },
		{ 213.0,  113.403 },
		{ 214.0,  113.389 },
		{ 215.0,  113.407 },
		{ 216.0,  113.409 },
		{ 217.0,  113.415 },
		{ 218.0,  113.416 },
		{ 219.0,  113.418 },
		{ 220.0,  113.419 },
		{ 221.0,  113.41 },
		{ 222.0,  113.412 },
		{ 223.0,  113.409 },
		{ 224.0,  113.415 },
		{ 225.0,  113.42 },
		{ 226.0,  113.421 },
		{ 227.0,  113.466 },
		{ 228.0,  113.486 },
		{ 229.0,  113.495 },
		{ 230.0,  113.477 },
		{ 231.0,  113.486 },
		{ 232.0,  113.478 },
		{ 233.0,  113.486 },
		{ 234.0,  113.478 },
		{ 235.0,  113.489 },
		{ 236.0,  113.48 },
		{ 237.0,  113.459 },
		{ 238.0,  113.495 },
		{ 239.0,  113.491 },
		{ 240.0,  113.526 },
		{ 241.0,  113.556 },
		{ 242.0,  113.558 },
		{ 243.0,  113.551 },
		{ 244.0,  113.561 },
		{ 245.0,  113.565 },
		{ 246.0,  113.568 },
		{ 247.0,  113.544 },
		{ 248.0,  113.564 },
		{ 249.0,  113.552 },
		{ 250.0,  113.558 },
		{ 251.0,  113.565 },
		{ 252.0,  113.595 },
		{ 253.0,  113.601 },
		{ 254.0,  113.579 },
		{ 255.0,  113.588 },
		{ 256.0,  113.589 },
		{257.0,113.595}
	};
	//
	for (unsigned int i = 0u; i<66; i++)
	{
		t1 = t0++;
		int n = ExpClass_Push(ptr, int(sample[i][0]), sample[i][1], t0, t1);
		double sma = ExpClass_Calc(ptr);
		std::cout << sma << std::endl;

	}
	ExpClass_Destroy(ptr);

	//dllで作成したクラスインスタンスを作成する
	system("pause");
	return 0;
}

